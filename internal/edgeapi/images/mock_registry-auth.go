// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/project-flotta/flotta-operator/internal/edgeapi/images (interfaces: RegistryAuthAPI)

// Package images is a generated GoMock package.
package images

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRegistryAuthAPI is a mock of RegistryAuthAPI interface.
type MockRegistryAuthAPI struct {
	ctrl     *gomock.Controller
	recorder *MockRegistryAuthAPIMockRecorder
}

// MockRegistryAuthAPIMockRecorder is the mock recorder for MockRegistryAuthAPI.
type MockRegistryAuthAPIMockRecorder struct {
	mock *MockRegistryAuthAPI
}

// NewMockRegistryAuthAPI creates a new mock instance.
func NewMockRegistryAuthAPI(ctrl *gomock.Controller) *MockRegistryAuthAPI {
	mock := &MockRegistryAuthAPI{ctrl: ctrl}
	mock.recorder = &MockRegistryAuthAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRegistryAuthAPI) EXPECT() *MockRegistryAuthAPIMockRecorder {
	return m.recorder
}

// GetAuthFileFromSecret mocks base method.
func (m *MockRegistryAuthAPI) GetAuthFileFromSecret(arg0 context.Context, arg1, arg2 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAuthFileFromSecret", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAuthFileFromSecret indicates an expected call of GetAuthFileFromSecret.
func (mr *MockRegistryAuthAPIMockRecorder) GetAuthFileFromSecret(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAuthFileFromSecret", reflect.TypeOf((*MockRegistryAuthAPI)(nil).GetAuthFileFromSecret), arg0, arg1, arg2)
}
