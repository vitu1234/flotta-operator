// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Flotta backend API for remote data storage",
    "title": "Flotta backend API",
    "contact": {
      "name": "Flotta flotta",
      "url": "https://github.com/project-flotta",
      "email": "flotta@redhat.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "basePath": "/api/flotta-backend/v1",
  "paths": {
    "/namespaces/{namespace}/devices/{device-id}/configuration": {
      "get": {
        "description": "Returns the device configuration",
        "tags": [
          "backend"
        ],
        "operationId": "GetDeviceConfiguration",
        "parameters": [
          {
            "type": "string",
            "description": "Namespace where the device resides",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Device ID",
            "name": "device-id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/device-configuration-response"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/device-configuration-response"
            }
          }
        }
      }
    },
    "/namespaces/{namespace}/devices/{device-id}/enrolment": {
      "post": {
        "description": "Initiates the process of enrolling the device",
        "tags": [
          "backend"
        ],
        "operationId": "EnrolDevice",
        "parameters": [
          {
            "type": "string",
            "description": "Namespace where the device resides",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Device ID",
            "name": "device-id",
            "in": "path",
            "required": true
          },
          {
            "name": "enrolment-info",
            "in": "body",
            "required": true,
            "schema": {
              "x-go-type": {
                "import": {
                  "alias": "commonmodel",
                  "package": "github.com/project-flotta/flotta-operator/models"
                },
                "type": "EnrolmentInfo"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/namespaces/{namespace}/devices/{device-id}/heartbeat": {
      "put": {
        "description": "Updates the heartbeat information of the device.",
        "tags": [
          "backend"
        ],
        "operationId": "UpdateHeartBeat",
        "parameters": [
          {
            "type": "string",
            "description": "Namespace where the device resides",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Device ID",
            "name": "device-id",
            "in": "path",
            "required": true
          },
          {
            "name": "heartbeat",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-go-type": {
                "import": {
                  "alias": "commonmodel",
                  "package": "github.com/project-flotta/flotta-operator/models"
                },
                "type": "Heartbeat"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/namespaces/{namespace}/devices/{device-id}/playbookexecutions": {
      "get": {
        "description": "Returns the playbook executions.",
        "tags": [
          "backend"
        ],
        "operationId": "GetPlaybookExecutions",
        "parameters": [
          {
            "type": "string",
            "description": "Namespace where the device resides",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Device ID",
            "name": "device-id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "x-go-type": {
                "import": {
                  "alias": "commonmodel",
                  "package": "github.com/project-flotta/flotta-operator/models"
                },
                "type": "PlaybookExecutionsResponse"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/namespaces/{namespace}/devices/{device-id}/registration": {
      "get": {
        "description": "Returns a device registration status, which can be registered, unregistered or unknown.",
        "tags": [
          "backend"
        ],
        "operationId": "GetRegistrationStatus",
        "parameters": [
          {
            "type": "string",
            "description": "Namespace where the device resides",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Device ID",
            "name": "device-id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/device-registration-status-response"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/device-registration-status-response"
            }
          }
        }
      },
      "put": {
        "description": "Registers the device by providing its hardware configuration",
        "tags": [
          "backend"
        ],
        "operationId": "RegisterDevice",
        "parameters": [
          {
            "type": "string",
            "description": "Namespace where the device resides",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Device ID",
            "name": "device-id",
            "in": "path",
            "required": true
          },
          {
            "name": "registration-info",
            "in": "body",
            "required": true,
            "schema": {
              "x-go-type": {
                "import": {
                  "alias": "commonmodel",
                  "package": "github.com/project-flotta/flotta-operator/models"
                },
                "type": "RegistrationInfo"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "device-configuration-response": {
      "type": "object",
      "properties": {
        "device-configuration": {
          "x-go-type": {
            "import": {
              "alias": "commonmodel",
              "package": "github.com/project-flotta/flotta-operator/models"
            },
            "type": "DeviceConfigurationMessage"
          }
        },
        "message": {
          "description": "Exposes the error message generated at the backend when there is an error (example HTTP code 500).",
          "type": "string"
        }
      }
    },
    "device-registration-status-response": {
      "type": "object",
      "properties": {
        "message": {
          "description": "Exposes the error message generated at the backend when there is an error (example HTTP code 500).",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace the device should be or was finally placed during registration.",
          "type": "string"
        },
        "status": {
          "description": "Returns the device registration status, which can be one of the following {registered, unregistered, unknown}.",
          "type": "string"
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "description": "Exposes the error message generated at the backend when there is an error (example HTTP code 500).",
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Edge device backend storage management",
      "name": "backend"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Flotta backend API for remote data storage",
    "title": "Flotta backend API",
    "contact": {
      "name": "Flotta flotta",
      "url": "https://github.com/project-flotta",
      "email": "flotta@redhat.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "basePath": "/api/flotta-backend/v1",
  "paths": {
    "/namespaces/{namespace}/devices/{device-id}/configuration": {
      "get": {
        "description": "Returns the device configuration",
        "tags": [
          "backend"
        ],
        "operationId": "GetDeviceConfiguration",
        "parameters": [
          {
            "type": "string",
            "description": "Namespace where the device resides",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Device ID",
            "name": "device-id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/device-configuration-response"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/device-configuration-response"
            }
          }
        }
      }
    },
    "/namespaces/{namespace}/devices/{device-id}/enrolment": {
      "post": {
        "description": "Initiates the process of enrolling the device",
        "tags": [
          "backend"
        ],
        "operationId": "EnrolDevice",
        "parameters": [
          {
            "type": "string",
            "description": "Namespace where the device resides",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Device ID",
            "name": "device-id",
            "in": "path",
            "required": true
          },
          {
            "name": "enrolment-info",
            "in": "body",
            "required": true,
            "schema": {
              "x-go-type": {
                "import": {
                  "alias": "commonmodel",
                  "package": "github.com/project-flotta/flotta-operator/models"
                },
                "type": "EnrolmentInfo"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/namespaces/{namespace}/devices/{device-id}/heartbeat": {
      "put": {
        "description": "Updates the heartbeat information of the device.",
        "tags": [
          "backend"
        ],
        "operationId": "UpdateHeartBeat",
        "parameters": [
          {
            "type": "string",
            "description": "Namespace where the device resides",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Device ID",
            "name": "device-id",
            "in": "path",
            "required": true
          },
          {
            "name": "heartbeat",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-go-type": {
                "import": {
                  "alias": "commonmodel",
                  "package": "github.com/project-flotta/flotta-operator/models"
                },
                "type": "Heartbeat"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/namespaces/{namespace}/devices/{device-id}/playbookexecutions": {
      "get": {
        "description": "Returns the playbook executions.",
        "tags": [
          "backend"
        ],
        "operationId": "GetPlaybookExecutions",
        "parameters": [
          {
            "type": "string",
            "description": "Namespace where the device resides",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Device ID",
            "name": "device-id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "x-go-type": {
                "import": {
                  "alias": "commonmodel",
                  "package": "github.com/project-flotta/flotta-operator/models"
                },
                "type": "PlaybookExecutionsResponse"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/namespaces/{namespace}/devices/{device-id}/registration": {
      "get": {
        "description": "Returns a device registration status, which can be registered, unregistered or unknown.",
        "tags": [
          "backend"
        ],
        "operationId": "GetRegistrationStatus",
        "parameters": [
          {
            "type": "string",
            "description": "Namespace where the device resides",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Device ID",
            "name": "device-id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/device-registration-status-response"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/device-registration-status-response"
            }
          }
        }
      },
      "put": {
        "description": "Registers the device by providing its hardware configuration",
        "tags": [
          "backend"
        ],
        "operationId": "RegisterDevice",
        "parameters": [
          {
            "type": "string",
            "description": "Namespace where the device resides",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Device ID",
            "name": "device-id",
            "in": "path",
            "required": true
          },
          {
            "name": "registration-info",
            "in": "body",
            "required": true,
            "schema": {
              "x-go-type": {
                "import": {
                  "alias": "commonmodel",
                  "package": "github.com/project-flotta/flotta-operator/models"
                },
                "type": "RegistrationInfo"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "device-configuration-response": {
      "type": "object",
      "properties": {
        "device-configuration": {
          "x-go-type": {
            "import": {
              "alias": "commonmodel",
              "package": "github.com/project-flotta/flotta-operator/models"
            },
            "type": "DeviceConfigurationMessage"
          }
        },
        "message": {
          "description": "Exposes the error message generated at the backend when there is an error (example HTTP code 500).",
          "type": "string"
        }
      }
    },
    "device-registration-status-response": {
      "type": "object",
      "properties": {
        "message": {
          "description": "Exposes the error message generated at the backend when there is an error (example HTTP code 500).",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace the device should be or was finally placed during registration.",
          "type": "string"
        },
        "status": {
          "description": "Returns the device registration status, which can be one of the following {registered, unregistered, unknown}.",
          "type": "string"
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "description": "Exposes the error message generated at the backend when there is an error (example HTTP code 500).",
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Edge device backend storage management",
      "name": "backend"
    }
  ]
}`))
}
